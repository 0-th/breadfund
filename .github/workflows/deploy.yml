name: Deploy to Cloud server

on:
  workflow_run:
    # complete building and pushing the docker image before deploying
    workflows: ["Build and Push Docker Image"]
    types:
      - completed
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Copy configuration files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.DEPLOY_KEY }}
          source: "docker-compose.yml"
          target: "~/app/"
          strip_components: 0

      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.DEPLOY_KEY }}
          envs: |
            PROD_DATABASE_URL
          environment: PROD_DATABASE_URL=${{ secrets.PROD_DATABASE_URL }}
          script: |
            cd ~/app

            # echo "Running database migrations..."
            # # Create a temporary container to run migrations
            # docker run --rm \
            #   -e DATABASE_URL="${PROD_DATABASE_URL}" \
            #   zr0th/breadfund:latest \
            #   alembic upgrade head

            # if [ $? -ne 0 ]; then
            #   echo "Migration failed!"
            #   exit 1
            # fi

            # echo "Migrations completed successfully. Deploying application..."


            # Pull the new images first
            docker compose pull

            # Gracefully stop the services
            docker compose down --remove-orphans

            # Start the new services
            docker compose up -d

            # Clean up only if deployment was successful
            docker image prune -f

            echo "Deployment completed successfully"
